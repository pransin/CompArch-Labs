$date
	Mon Nov 08 15:30:55 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 1 ! sum $end
$var wire 1 " cout $end
$var reg 3 # in [2:0] $end
$scope module a1 $end
$var wire 1 $ a $end
$var wire 1 % b $end
$var wire 1 & cin $end
$var wire 1 " cout $end
$var wire 1 ! sum $end
$upscope $end
$upscope $end
$scope module testbench_4adder $end
$var wire 4 ' sum [3:0] $end
$var wire 1 ( cout $end
$var reg 4 ) a [3:0] $end
$var reg 4 * b [3:0] $end
$scope module a1 $end
$var wire 4 + a [3:0] $end
$var wire 4 , b [3:0] $end
$var wire 1 - cin $end
$var wire 4 . sum [3:0] $end
$var wire 1 ( cout $end
$var wire 1 / c2 $end
$var wire 1 0 c1 $end
$var wire 1 1 c0 $end
$scope module s0 $end
$var wire 1 2 a $end
$var wire 1 3 b $end
$var wire 1 - cin $end
$var wire 1 1 cout $end
$var wire 1 4 sum $end
$var wire 1 5 t1 $end
$var wire 1 6 t2 $end
$var wire 1 7 t3 $end
$upscope $end
$scope module s1 $end
$var wire 1 8 a $end
$var wire 1 9 b $end
$var wire 1 1 cin $end
$var wire 1 0 cout $end
$var wire 1 : sum $end
$var wire 1 ; t1 $end
$var wire 1 < t2 $end
$var wire 1 = t3 $end
$upscope $end
$scope module s2 $end
$var wire 1 > a $end
$var wire 1 ? b $end
$var wire 1 0 cin $end
$var wire 1 / cout $end
$var wire 1 @ sum $end
$var wire 1 A t1 $end
$var wire 1 B t2 $end
$var wire 1 C t3 $end
$upscope $end
$scope module s3 $end
$var wire 1 D a $end
$var wire 1 E b $end
$var wire 1 / cin $end
$var wire 1 ( cout $end
$var wire 1 F sum $end
$var wire 1 G t1 $end
$var wire 1 H t2 $end
$var wire 1 I t3 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0I
0H
0G
0F
0E
0D
0C
0B
0A
1@
0?
1>
0=
0<
0;
1:
19
08
07
06
05
04
03
02
01
00
0/
b110 .
0-
b10 ,
b100 +
b10 *
b100 )
0(
b110 '
0&
0%
0$
b0 #
0"
0!
$end
#5
b111 '
b111 .
14
13
b11 *
b11 ,
#10
1F
1/
1!
04
0:
b1000 '
b1000 .
0@
1A
03
09
1?
1$
b100 *
b100 ,
b1 #
#15
b1001 '
b1001 .
14
13
b101 *
b101 ,
#20
04
b1010 '
b1010 .
1:
03
19
0$
1%
b110 *
b110 ,
b10 #
#25
b1011 '
b1011 .
14
13
b111 *
b111 ,
#30
1"
0/
0(
0!
04
0:
1@
0A
b1100 '
b1100 .
1F
0H
03
09
0?
1E
1$
b1000 *
b1000 ,
b11 #
#35
b1101 '
b1101 .
14
13
b1001 *
b1001 ,
#40
0"
04
b1110 '
b1110 .
1:
1!
03
19
0$
0%
1&
b1010 *
b1010 ,
b100 #
#45
b1111 '
b1111 .
14
13
b1011 *
b1011 ,
#50
1(
0F
1H
1/
0!
1"
04
0:
b0 '
b0 .
0@
1A
03
09
1?
1$
b1100 *
b1100 ,
b101 #
#55
b1 '
b1 .
14
12
b101 )
b101 +
#60
04
b10 '
b10 .
1:
02
18
0$
1%
b110 )
b110 +
b110 #
#65
b11 '
b11 .
14
12
b111 )
b111 +
#70
0H
0/
1!
04
0:
1@
0A
b100 '
b100 .
0F
1G
0I
02
08
0>
1D
1$
b1000 )
b1000 +
b111 #
#75
b101 '
b101 .
14
12
b1001 )
b1001 +
#80
0"
04
b110 '
b110 .
1:
0!
02
18
0$
0%
0&
b1010 )
b1010 +
b0 #
#85
b111 '
b111 .
14
12
b1011 )
b1011 +
#90
1F
1H
1I
1/
04
0:
b1000 '
b1000 .
0@
1A
02
08
1>
b1100 )
b1100 +
#95
b1001 '
b1001 .
14
12
b1101 )
b1101 +
#100
04
b1010 '
b1010 .
1:
02
18
b1110 )
b1110 +
